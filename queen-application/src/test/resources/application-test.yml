application:
  corsOrigins: https://localhost
  roles:
    interviewer: interviewer
    reviewer: reviewer
    admin: admin
    webclient: webclient
    reviewer-alternative: alternate-reviewer
  temp-folder: ${java.io.tmpdir}

feature:
  oidc:
    enabled: true
    auth-server-host: https://auth.oauth2
    client-id: client
    realm: my-realm
    principal-attribute: username
    additional-realm: additional-realm
  dataset:
    # create demo dataset on startup
    load-on-start: false
    # display api endpoint to create dataset
    display-endpoint: true
  swagger:
    enabled: false
  pilotage:
    enabled: false
  cache:
    enabled: false
  comments:
    enabled: true
  interviewer-mode:
    enabled: true
  mongo:
    enabled: true

spring:
  autoconfigure:
    exclude:
  liquibase:
    enabled: true
    contexts: test
    defaultSchema: public
    change-log: classpath:db/integration-test.xml
logging:
  level:
    root: INFO
    liquibase: ERROR
zonky:
  test:
    database:
      type: postgres                 # The type of embedded database to be created when replacing the data source.
      provider: zonky                # Provider to be used to create the underlying embedded database.
      refresh: never                 # Determines the refresh mode of the embedded database.
      replace: any                   # Determines what type of existing DataSource beans can be replaced.
      postgres:
        server:
          properties:
            shared_buffers: 128MB
            max_connections: 5

#force charset for mockmvc
server:
  servlet:
    encoding:
      charset: UTF-8
      force: true