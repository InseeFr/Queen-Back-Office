server.port: 8081

application:
  public-urls:
    - /swagger-ui/**
    - /v3/api-docs/**
    - /v3/*.json
    - /api/healthcheck
    - /
  roles:
    interviewer:
    reviewer:
    admin:
    webclient:
    reviewer-alternative:
    survey-unit:
  corsOrigins: https://test.com #mandatory
    # define folder where temp files will be created
    # /!\ do not use the OS default temp folder or java.io.tmpdir as it causes security issues
    # give only access rights to this folder to the user executing the tomcat process
  temp-folder: /opt/app/app-temp

feature:
  sensitive-data:
    enabled: false
    encryptionSecretKey:
  oidc:
    enabled: true
    auth-server-host: https://auth-server.host
    auth-server-url: ${feature.oidc.auth-server-host}/auth
    client-id: my-client-id
    realm: my-realm
    principal-attribute: id-claim
    role-claim:
  swagger:
    enabled: false
  pilotage:
    enabled: true
    url:
    alternative-habilitation:
      url: http://alternative.url
      campaignids-regex: ((edt)|(EDT))(\d|\S){1,}
  cache:
    enabled: true
  comments:
    enabled: false
  interviewer-mode:
    enabled: false
spring:
  docker:
    compose:
      enabled: false
  main:
    allow-bean-definition-overriding: true
  datasource:
    url: jdbc:postgresql://localhost:5434/questionnaire
    username: mypostgresuser2
    password: mypostgrespassword2
    driver-class-name: org.postgresql.Driver
    hikari:
      minimum-idle: 2
      maximum-pool-size: 2
  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
        implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
    properties:
      id:
        new_generator_mappings: true
      cache:
        use_second_level_cache: false
        use_query_cache: false
      generate_statistics: false
      hbm2ddl:
        auto: validate
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${feature.oidc.auth-server-url}/realms/${feature.oidc.realm}
  liquibase:
    enabled: true
    contexts: prod
    defaultSchema: public
    change-log: classpath:db/master.xml
  
springdoc:
  swagger-ui:
    oauth:
      client-id: ${feature.oidc.client-id}
      # /!\ when injecting this property from env var, cannot convert KCIDPHINT env var to kc_idp_hint otherwise
      # This property is a hint for spring-boot to map the env var to this property
      additionalQueryStringParams:
        kc_idp_hint: my-idp
    path: /
    syntax-highlight:
      activated: false
    tagsSorter: alpha
    doc-expansion: none
  api-docs:
    version: OPENAPI_3_1
#Actuator Metrics
management:
  endpoints:
    enabled-by-default: false
    web:
      discovery:
        enabled: false
logging:
  appender: CONSOLE # CONSOLE | ROLLING_FILE
  level:
    root: INFO
    fr:
      insee:
        queen: INFO
    liquibase: INFO
  pattern:
    console: "%d{YYYY-MM-dd HH:mm:ss.SSS} [%X{id}][%X{user}][%X{method} %X{path}] [%thread] %-5level %logger{36} - %htmlEncode{%m}%n"
    file: ${logging.pattern.console}
  logback:
    rollingpolicy:
      max-history: 90