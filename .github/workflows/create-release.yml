name: Build release

on:
  push:
    branches:
      - main
jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      release-version: ${{ steps.version-step.outputs.version }}
    steps:
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: install model filiere
        run: mvn install:install-file -Dfile="$(pwd)/queen-listener-jms/libs/modelefiliere-1.1.2-SNAPSHOT.jar" -DgroupId=fr.insee -DartifactId=modelefiliere -Dversion=1.1.2-SNAPSHOT -Dpackaging=jar -DgeneratePom=true

      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Get source version
        id: version-step
        run: echo "version=$(mvn -f pom.xml help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_OUTPUT

      - name: Print source version
        run: echo ${{ steps.version-step.outputs.version }}

      - uses: mukunku/tag-exists-action@v1.6.0
        name: Check tag existence
        id: check-tag-exists
        with:
          tag: ${{ steps.version-step.outputs.version }}

      - name: Tag verification
        id: check-tag
        run: |
          if [[ "${{ steps.check-tag-exists.outputs.exists }}" == "true" ]]; then
            echo "Nothing to tag/release, the tag ${{ steps.version-step.outputs.version }} already exists"
            exit 1
          fi

          if ! [[ "${{ steps.version-step.outputs.version }}" =~ ^[0-9]+.[0-9]+.[0-9]+$ ]]; then
            echo "Nothing to tag/release, the tag ${{ steps.version-step.outputs.version }} is not in correct format X.Y.Z"
            exit 1
          fi

  build-sources:
    needs: check-version
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - uses: actions/checkout@v4
      - name: Build app
        run: mvn package --no-transfer-progress

      - name: Upload app jar
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: queen-application/target/*.jar

  create-release:
    needs: [ check-version, build-sources ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0

      - name: Get previous final release tag
        id: previousTag
        run: echo "previousTag=$(git --no-pager tag --sort=creatordate --merged ${{ github.ref_name }} | grep "^[0-9]\+\.[0-9]\+\.[0-9]\+$" | tail -1)" >> $GITHUB_OUTPUT

      - name: Create release note
        id: changelog
        uses: requarks/changelog-action@v1
        with:
          fromTag: ${{ github.sha }}
          toTag: ${{ steps.previousTag.outputs.previousTag}}
          token: ${{ secrets.GITHUB_TOKEN }}
          writeToFile: false

      - uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.check-version.outputs.release-version }}
          target_commitish: ${{ github.head_ref || github.ref }}
          name: ${{ needs.check-version.outputs.release-version }}
          body: ${{steps.changelog.outputs.changes}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-docker:
    needs: [ check-version, create-release ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download uploaded jar
        uses: actions/download-artifact@v4
        with:
          name: app-jar
          path: queen-application/target/

      - name: Publish to Docker Hub
        uses: elgohr/Publish-Docker-Github-Action@v5
        with:
          name: inseefr/queen-back-office
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          default_branch: ${{ github.ref }}
          tags: ${{ needs.check-version.outputs.release-version }}
          workdir: queen-application